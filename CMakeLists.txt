cmake_minimum_required(VERSION 2.8)
project( ProjectEagle )

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")

ADD_DEFINITIONS(-DSWM_ZYRE_CONFIG_DIR="${CMAKE_HOME_DIRECTORY}")
ADD_DEFINITIONS(-std=c++11)

find_package(OpenCV REQUIRED)
find_package(ZMQ REQUIRED)
find_package(CZMQ REQUIRED)
find_package(ZYRE REQUIRED)

set (LIBRARIES ${OpenCV_LIBS} ${ZMQ_LIBRARIES} ${CZMQ_LIBRARIES} ${ZYRE_LIBRARIES} LibEagle)
include_directories( include ${ZMQ_INCLUDE_DIRS} ${ZMQ_INCLUDE_DIRS} ${CZMQ_INCLUDE_DIRS}  ${ZYRE_INCLUDE_DIRS})

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

add_subdirectory(src)
add_executable( LatitudeViewer examples/latitude_test.cpp )
add_executable( See3Viewer examples/see3cam_test.cpp )
add_executable( See3FPS examples/see3cam_test_fps.cpp )
add_executable( OPIcapture examples/opi_test_capture.cpp )
add_executable( OPIfps examples/opi_test_fps.cpp )
add_executable( OPIstream examples/opi_test_stream.cpp )
add_executable( Communicator examples/communicator_test.cpp )
add_executable( ImageTransmitter examples/image_transmitter_test.cpp )
add_executable( ImageReceiver examples/image_receiver_test.cpp )
add_executable( Detector examples/detector_test.cpp )
add_executable( EagleTransmitter examples/eagle_transmitter.cpp )
add_executable( EagleReceiver examples/eagle_receiver.cpp )
add_executable( Background examples/background.cpp )
target_link_libraries( LatitudeViewer ${LIBRARIES} )
target_link_libraries( See3Viewer ${LIBRARIES} )
target_link_libraries( See3FPS ${LIBRARIES} )
target_link_libraries( OPIcapture ${LIBRARIES} )
target_link_libraries( OPIfps ${LIBRARIES} )
target_link_libraries( OPIstream ${LIBRARIES} )
target_link_libraries( Communicator ${LIBRARIES})
target_link_libraries( ImageTransmitter ${LIBRARIES})
target_link_libraries( ImageReceiver ${LIBRARIES})
target_link_libraries( Detector ${LIBRARIES})
target_link_libraries( EagleTransmitter ${LIBRARIES})
target_link_libraries( EagleReceiver ${LIBRARIES})
target_link_libraries( Background ${LIBRARIES})
